<!doctype html>
<html lang="en">
  <head>
    <title>{{ title }}</title>
    <meta charset="utf-8">
    <meta name="description" content="{{ description }}">
    <meta name="viewport" content="width=device-width,initial-scale=1">
    <link rel="apple-touch-icon" href="/apple-touch-icon.png">
    <link rel="icon" type="image/svg+xml" href="/favicon.svg">
    <link rel="stylesheet" href="{{ "/css/styles.css" | rev }}">
  </head>
  <body class="{{ view }} fancy-details accordion">
    <main>
      {{ content | safe }}
    </main>
  </body>

  <script>
    class Tools {
      init() {
        this.#externalLinks();
        this.#fancyDetails();
      }

      #externalLinks() {
        const home = new URL(window.location);
        const links = document.querySelectorAll('a');

        for (const link of links) {
          const {hostname, protocol} = new URL(link.href);
          if (protocol === 'https:' && hostname !== home.hostname) {
            link.setAttribute('target', '_blank');
            link.setAttribute('rel', 'noopener');
          }
        }
      }

      #fancyDetails() {
        if (!document.body.classList.contains('fancy-details')) {
          return;
        }

        const details = document.querySelectorAll('details');
        if (!details.length) {
          return;
        }

        const sizeProp = '--details-size';

        document.body.addEventListener('click', (e) => {
          if (e.target.tagName.toLowerCase() !== 'summary') {
            return;
          }

          // Set block-size for transitions.
          const parent = e.target.closest('details');

          requestAnimationFrame(() => {
            parent.style.setProperty(sizeProp, `${parent.scrollHeight}px`);

            if (!parent.hasAttribute('open')) {
              parent.style.removeProperty(sizeProp);
            }
          });

          // Only one element is open at at time.
          if (document.body.classList.contains('accordion')) {
            for (const detail of details) {
              if (detail !== parent) {
                detail.removeAttribute('open');
                detail.style.removeProperty(sizeProp);
              }
            }
          }
        });
      }
    }
    
    new Tools().init();
  </script>
</html>
