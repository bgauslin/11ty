// Sass constants for DRYness.
$arrow-size: .5em;
$duration: .2s;

// Vars for light/dark mode.
:root {
  --background-0: GhostWhite;
  --background-1: white;
  --focus-color: OrangeRed;
  --link-color: DodgerBlue;
  --shadow-1: #{rgba(black, 0.15)} 0 0 4px;
  --text-color: Black;
  --visited-color: RebeccaPurple;
}

@media (prefers-color-scheme: dark) {
  :root {
    --background-0: Black;
    --background-1: #{rgba(white, .1)};
    --focus-color: DarkOrange;
    --link-color: CornflowerBlue;
    --shadow-1: #{rgba(white, .15)} 0 0 0 1px;
    --text-color: Gainsboro;
    --visited-color: MediumPurple;
  }
}

// Layouts.
.home {
  --main-max-inline-size: 34em;
}

// Global elements.
:where(*) {
  box-sizing: border-box;
}

html {
  -webkit-tap-highlight-color: transparent;
  touch-action: manipulation;
}

body {
  background: var(--background-0);
  color: var(--text-color);
  font: clamp(.875em, .5em + 1vw, 2em) / 1.5 system-ui, sans-serif;
  margin: 0;
  min-block-size: 100dvh;
}

main {
  margin-inline: auto;
  max-inline-size: var(--main-max-inline-size, 80rem);
  padding: var(--main-padding, 1.5em);
}

// Expandable sections.
details {
  background: var(--background-1);
  border-radius: .5em;
  box-shadow: var(--shadow-1);
  margin-block: 1.5em;
  padding-block: 0;
}

// [1]: Default 'display' override removes default marker.
summary {
  cursor: pointer;
  font-weight: bold;
  opacity: .75;
  padding-block: .5em;
  transition: opacity $duration;
}

summary + * {
  margin-block-start: 0;
}

details > * {
  padding-inline: 1em;
}

details > *:last-child {
  padding-block-end: 1em;
}

summary:focus,
summary:hover {
  opacity: 1;
}

// Text styles.
:is(h1, h2, h3) {
  font-size: 1em;
  margin: 0;
}

h1 + p {
  margin-block-start: 0;
}

details > ul {
  padding-inline: 2em 1em;
}

li {
  margin-block: 1em;
}

li::marker {
  content: '‚ùâ ';
}

// Link styles.
:where(a, summary) {
  outline: none;
}

a {
  color: var(--link-color);
  font-weight: bold;
  text-decoration: none;
}

a:visited {
  color: var(--visited-color);
}

a:focus {
  color: var(--focus-color);
}

a:hover {
  color: var(--focus-color);
}

@media (any-hover: hover) {
  a {
    transition: color $duration;
  }
}
