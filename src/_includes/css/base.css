/* Global elements. */

html {
  -webkit-tap-highlight-color: transparent;
  touch-action: manipulation;
}

:where(*) {
  box-sizing: border-box;
}

:is(body, main) {
  min-block-size: 100dvh;
}

body {
  background: var(--background-0);
  color: var(--text-color);
  font: clamp(.875em, .5em + 1vw, 2em) / 1.4 var(--font-family);
  margin: 0;
}

main {
  margin-inline: auto;
  max-inline-size: var(--main-max-inline-size, 80rem);
  padding: var(--main-padding, var(--gap));
}

/* Headings. If vars are undefined, the 'font-size'
   and 'margin' properties default to 1em and 0. */

h1 {
  font-size: var(--h1-font-size);
  margin: var(--h1-margin);
}

h2 {
  font-size: var(--h2-font-size);
  margin: var(--h2-margin);
}

h3 {
  font-size: var(--h3-font-size);
  margin: var(--h3-margin);
}

/* Generic links. */
a {
  color: var(--link-color);
  font-weight: bold;
  outline: none;
  text-decoration: none;

  &:visited {
    color: var(--visited-color);
  }
  
  &:is(:focus, :hover) {
    color: var(--focus-color);
  }
}

/* Responsive media. */

:where(img, svg) {
  block-size: auto;
  inline-size: 100%;
  vertical-align: middle;
}

svg {
  fill: currentColor;
}

/* Media layout resets/defaults. */

figure {
  margin: 0;
}

figcaption {
  margin: 0 auto;
  padding: 1em;
}

/* Only apply transitions on devices that support hover. */

@media (any-hover: hover) {
  a {
    transition: background-color var(--duration), color var(--duration), opacity var(--duration), transform var(--duration);
  }

  svg {
    transition: fill var(--duration);
  }
}
